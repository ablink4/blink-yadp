// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: sensordata/sensordata.proto

package sensordata

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Data sample for a single sensor
type SensorData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // timestamp with sub-second precision
	SensorId      uint32                 `protobuf:"varint,2,opt,name=sensor_id,json=sensorId,proto3" json:"sensor_id,omitempty"`
	Value         float32                `protobuf:"fixed32,3,opt,name=value,proto3" json:"value,omitempty"`
	Metadata      string                 `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorData) Reset() {
	*x = SensorData{}
	mi := &file_sensordata_sensordata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorData) ProtoMessage() {}

func (x *SensorData) ProtoReflect() protoreflect.Message {
	mi := &file_sensordata_sensordata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorData.ProtoReflect.Descriptor instead.
func (*SensorData) Descriptor() ([]byte, []int) {
	return file_sensordata_sensordata_proto_rawDescGZIP(), []int{0}
}

func (x *SensorData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SensorData) GetSensorId() uint32 {
	if x != nil {
		return x.SensorId
	}
	return 0
}

func (x *SensorData) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *SensorData) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

// A batch of sensor readings
type SensorDataBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*SensorData          `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SensorDataBatch) Reset() {
	*x = SensorDataBatch{}
	mi := &file_sensordata_sensordata_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorDataBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorDataBatch) ProtoMessage() {}

func (x *SensorDataBatch) ProtoReflect() protoreflect.Message {
	mi := &file_sensordata_sensordata_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorDataBatch.ProtoReflect.Descriptor instead.
func (*SensorDataBatch) Descriptor() ([]byte, []int) {
	return file_sensordata_sensordata_proto_rawDescGZIP(), []int{1}
}

func (x *SensorDataBatch) GetItems() []*SensorData {
	if x != nil {
		return x.Items
	}
	return nil
}

// Acknowledgement from the server to the client
type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_sensordata_sensordata_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_sensordata_sensordata_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_sensordata_sensordata_proto_rawDescGZIP(), []int{2}
}

func (x *Ack) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_sensordata_sensordata_proto protoreflect.FileDescriptor

const file_sensordata_sensordata_proto_rawDesc = "" +
	"\n" +
	"\x1bsensordata/sensordata.proto\x12\n" +
	"sensordata\x1a\x1fgoogle/protobuf/timestamp.proto\"\x95\x01\n" +
	"\n" +
	"SensorData\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1b\n" +
	"\tsensor_id\x18\x02 \x01(\rR\bsensorId\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x02R\x05value\x12\x1a\n" +
	"\bmetadata\x18\x04 \x01(\tR\bmetadata\"?\n" +
	"\x0fSensorDataBatch\x12,\n" +
	"\x05items\x18\x01 \x03(\v2\x16.sensordata.SensorDataR\x05items\"\x1f\n" +
	"\x03Ack\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2\xd0\x01\n" +
	"\x0eSensorIngestor\x129\n" +
	"\x0eSendSensorData\x12\x16.sensordata.SensorData\x1a\x0f.sensordata.Ack\x12?\n" +
	"\x0fSendSensorBatch\x12\x1b.sensordata.SensorDataBatch\x1a\x0f.sensordata.Ack\x12B\n" +
	"\x10SendSensorStream\x12\x1b.sensordata.SensorDataBatch\x1a\x0f.sensordata.Ack(\x01B1Z/blink-yadp/internal/proto/sensordata;sensordatab\x06proto3"

var (
	file_sensordata_sensordata_proto_rawDescOnce sync.Once
	file_sensordata_sensordata_proto_rawDescData []byte
)

func file_sensordata_sensordata_proto_rawDescGZIP() []byte {
	file_sensordata_sensordata_proto_rawDescOnce.Do(func() {
		file_sensordata_sensordata_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sensordata_sensordata_proto_rawDesc), len(file_sensordata_sensordata_proto_rawDesc)))
	})
	return file_sensordata_sensordata_proto_rawDescData
}

var file_sensordata_sensordata_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_sensordata_sensordata_proto_goTypes = []any{
	(*SensorData)(nil),            // 0: sensordata.SensorData
	(*SensorDataBatch)(nil),       // 1: sensordata.SensorDataBatch
	(*Ack)(nil),                   // 2: sensordata.Ack
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_sensordata_sensordata_proto_depIdxs = []int32{
	3, // 0: sensordata.SensorData.timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: sensordata.SensorDataBatch.items:type_name -> sensordata.SensorData
	0, // 2: sensordata.SensorIngestor.SendSensorData:input_type -> sensordata.SensorData
	1, // 3: sensordata.SensorIngestor.SendSensorBatch:input_type -> sensordata.SensorDataBatch
	1, // 4: sensordata.SensorIngestor.SendSensorStream:input_type -> sensordata.SensorDataBatch
	2, // 5: sensordata.SensorIngestor.SendSensorData:output_type -> sensordata.Ack
	2, // 6: sensordata.SensorIngestor.SendSensorBatch:output_type -> sensordata.Ack
	2, // 7: sensordata.SensorIngestor.SendSensorStream:output_type -> sensordata.Ack
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_sensordata_sensordata_proto_init() }
func file_sensordata_sensordata_proto_init() {
	if File_sensordata_sensordata_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sensordata_sensordata_proto_rawDesc), len(file_sensordata_sensordata_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sensordata_sensordata_proto_goTypes,
		DependencyIndexes: file_sensordata_sensordata_proto_depIdxs,
		MessageInfos:      file_sensordata_sensordata_proto_msgTypes,
	}.Build()
	File_sensordata_sensordata_proto = out.File
	file_sensordata_sensordata_proto_goTypes = nil
	file_sensordata_sensordata_proto_depIdxs = nil
}
